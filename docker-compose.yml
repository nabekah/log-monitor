version: "3"

volumes: 
  logs:

services:
  #
  # Container to make fake logs
  #
  logs:
    build:
      context: docker/logs
      dockerfile: "Dockerfile"
    volumes:
      - logs:/logs/
    restart: "always"

  #
  # Tool container for importing/exporting dashboards.
  #
  tools:
    build:
      context: docker/tools
      dockerfile: "Dockerfile"
    volumes:
      - .:/mnt
      - logs:/logs/
    restart: "always"


  #
  # Container to read metrics from SEPTA Regional Rail.
  #
  septa:
    build:
      context: docker/septa
      dockerfile: "Dockerfile"
    volumes:
      - .:/mnt
      - logs:/logs/
    restart: "always"


  #
  # Read logs from files and ingest into Loki.
  #
  promtail:
    #image: grafana/promtail:2.3.0
    image: grafana/promtail:latest
    volumes:
      - logs:/logs/
      - ./config:/mnt/config
      - ./data/promtail:/mnt/var
      - /var/log:/var/log
    command: -config.file=/mnt/config/promtail-config-docker.yaml
    ports:
      - "9081:9080"
    restart: "always"


  #
  # Telegraf reads system metrics, and will expose them to Prometheus and send them to Loki
  #
  telegraf:
    image: telegraf:1.20
    hostname: telegraf
    volumes:
      - ./config/telegraf.conf:/etc/telegraf/telegraf.conf
    restart: "always"

  aspserver:
    build:
      context: docker/aspServer
      dockerfile: "Dockerfile"
    hostname: aspServer
    ports:
      - "8000:8080"
    volumes:
      - ./config/telegraf.conf:/etc/telegraf/telegraf.conf
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "2g"
    command: sh telegraf
    restart: "always"

  windows:
    image: dockurr/windows
    container_name: windows
    environment:
      RAM_SIZE: "2G"
      VERSION: "2012"
    devices:
      - /dev/kvm
    cap_add:
      - NET_ADMIN
    ports:
      - 8006:8006
      - 3389:3389/tcp
      - 3389:3389/udp
    stop_grace_period: 2m   
    # volumes:
    #   - ./config/telegraf.conf:/etc/telegraf/telegraf.conf
    # deploy:
    #   resources:
    #     limits:
    #       cpus: "2"
    #       memory: "2g"
    # command: sh telegraf
    restart: "always"

  #
  # The Loki database for storing logs.
  #
  loki:
    #image: grafana/loki:2.3.0
    #image: grafana/loki:2.6.1
    image: grafana/loki:latest
    user: root
    volumes:
      - ./config:/mnt/config
      - ./data/loki-data:/tmp/loki
      - ./data/loki-wal:/tmp/wal
    command: -config.file=/mnt/config/loki-config.yaml
    ports:
      - "3100:3100"
    restart: "always"

  #
  # Prometheus
  #
  prometheus:
    image: prom/prometheus
    #
    # Not thrilled with having to run as root in the container, but trying
    # to run this in a Linux VM has permission issues, since Docker commands
    # are normally run as root...
    #
    user: root
    ports:
      - "9090:9090"
    volumes:
      - ./data/prometheus:/prometheus
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: "always"
  #
  # blackBox to monitor HTTP Endpoint

  blackbox_exporter:
    image: prom/blackbox-exporter
    ports:
      - "9115:9115"
    dns: 8.8.8.8
    restart: always
    volumes:
      - ./config:/config
    command: '--config.file=/config/blackbox.yml'


  blackbox_exporter_ping:
    image: prom/blackbox-exporter
    ports:
      - "9116:9115"
    dns: 8.8.8.8
    restart: always
    volumes:
      - ./config/ping:/config
    command: '--config.file=/config/blackbox.yml'
  #
  # Grafana, for viewing via the UI.
  #
  grafana:
    image: grafana/grafana:latest
    # Running this as root for the same reason Prometheus is running as root.
    user: root
    volumes:
      - ./data/grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    restart: "always"



